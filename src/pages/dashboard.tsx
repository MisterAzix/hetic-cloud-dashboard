import Head from 'next/head';
import {
  Card,
  CardHeader,
  CardBody,
  Heading,
  Stack,
  Box,
  StackDivider,
  Text,
  Badge,
  Grid,
} from '@chakra-ui/react';

export default function Home({
  cpuInfo,
  memoryInfo,
}: {
  cpuInfo: { [key: string]: string | number }[];
  memoryInfo: { [key: string]: string };
}) {
  return (
    <>
      <Head>
        <title>HETIC Cloud - Groupe 3</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid p={4} px={4} templateColumns="repeat(3, 1fr)" gap={4}>
        <Card>
          <CardHeader>
            <Heading size="md">Groupe 3 - {process.env.serverRoot}</Heading>
          </CardHeader>

          <CardBody>
            <Stack divider={<StackDivider />} spacing="4">
              <Box>
                <Heading size="xs" textTransform="uppercase">
                  Status
                </Heading>
                <Badge colorScheme="green">Active</Badge>
              </Box>
              <Box>
                <Heading size="xs" textTransform="uppercase">
                  OS / Distribution
                </Heading>
                <Text pt="2" fontSize="sm">
                  Ubuntu 5.15.0-1034.41~20.04.1-azure 5.15.85
                </Text>
              </Box>
            </Stack>
          </CardBody>
        </Card>

        <Card>
          <CardHeader>
            <Heading size="md">CPU Infos</Heading>
          </CardHeader>

          <CardBody>
            <Stack divider={<StackDivider />} spacing="4">
              {cpuInfo.map((cpu: any, key) => (
                <Stack key={key} spacing="4">
                  {Object.keys(cpu).map((key: string) => (
                    <Box key={key}>
                      <Heading size="xs" textTransform="uppercase">
                        {key}
                      </Heading>
                      <Text pt="2" fontSize="sm">
                        {cpu[key]}
                      </Text>
                    </Box>
                  ))}
                </Stack>
              ))}
            </Stack>
          </CardBody>
        </Card>

        <Card>
          <CardHeader>
            <Heading size="md">Memory Infos</Heading>
          </CardHeader>

          <CardBody>
            <Stack spacing="4">
              {Object.keys(memoryInfo).map((key: string) => (
                <Box key={key}>
                  <Heading size="xs" textTransform="uppercase">
                    {key}
                  </Heading>
                  <Text pt="2" fontSize="sm">
                    {memoryInfo[key]}
                  </Text>
                </Box>
              ))}
            </Stack>
          </CardBody>
        </Card>
      </Grid>
    </>
  );
}

export async function getServerSideProps() {
  const cpuInfo = await fetch(`${process.env.apiRoot}/cpuinfo`);
  const cpuInfoJson = await cpuInfo.json();

  const memoryInfo = await fetch(`${process.env.apiRoot}/meminfo`);
  const memoryInfoJson = await memoryInfo.json();

  return {
    props: {
      cpuInfo: cpuInfoJson,
      memoryInfo: memoryInfoJson,
    },
  };
}
